version: 0.2

env:
  variables:
    ANDROID_COMPILE_SDK: "33"
    ANDROID_BUILD_TOOLS: "33.0.0"
    NODE_VERSION: "18"

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing system dependencies...
      - apt-get update
      - apt-get install -y openjdk-17-jdk unzip wget gradle
      - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
      
  pre_build:
    commands:
      - echo Installing Expo CLI...
      - npm install -g @expo/cli
      - echo Setting up Android SDK...
      - wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
      - unzip -q commandlinetools-linux-9477386_latest.zip
      - mkdir -p android-sdk/cmdline-tools/latest
      - mv cmdline-tools/* android-sdk/cmdline-tools/latest/
      - export ANDROID_HOME=$PWD/android-sdk
      - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
      - yes | sdkmanager --licenses || true
      - sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
      
  build:
    commands:
      - echo Starting build process...
      - export ANDROID_HOME=$PWD/android-sdk
      - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
      - echo Installing project dependencies...
      - npm install
      - echo Installing React Native CLI...
      - npm install --save-dev @react-native-community/cli
      - echo Creating Android project structure...
      - npx expo prebuild --platform android --clear --no-install
      - echo Building AAB with Gradle...
      - cd android
      - chmod +x ./gradlew
      - export ANDROID_HOME=$PWD/../android-sdk
      - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
      - echo "Building release bundle..."
      - ./gradlew bundleRelease -x test -x lint --info --stacktrace
      - echo "Gradle build completed"
      - cd ..
      - echo Locating AAB file...
      - find . -name "*.aab" -type f -ls
      
  post_build:
    commands:
      - echo Locating generated AAB file...
      - find . -name "*.aab" -type f -ls
      - echo Copying AAB to root directory...
      - find . -name "*.aab" -type f -exec cp {} ./rock-crush-release.aab \;
      - ls -la *.aab || echo "No AAB files found in root"
      - echo Uploading AAB to S3...
      - aws s3 cp ./rock-crush-release.aab s3://rock-crush-builds/rock-crush-$(date +%Y%m%d-%H%M%S).aab || echo "S3 upload failed - check bucket exists"
      - echo Upload completed

artifacts:
  files:
    - '**/*.aab'
    - 'android/app/build/outputs/bundle/release/*.aab'
  name: rock-crush-gradle-build
