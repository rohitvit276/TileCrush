---
# Splunk Enterprise Installation and Configuration Tasks

- name: Create splunk user and group
  group:
    name: "{{ splunk_group }}"
    state: present
  
- name: Create splunk user
  user:
    name: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    home: "{{ splunk_home }}"
    shell: /bin/bash
    system: yes
    state: present

- name: Create splunk directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    mode: '0755'
  loop:
    - "{{ splunk_home }}"
    - "{{ splunk_home }}/etc/apps"
    - "{{ splunk_home }}/etc/deployment-apps"
    - "{{ backup_location }}"
    - "/var/log/splunk"

- name: Check if Splunk is already installed
  stat:
    path: "{{ splunk_home }}/bin/splunk"
  register: splunk_installed

- name: Download Splunk Enterprise
  get_url:
    url: "https://download.splunk.com/products/splunk/releases/{{ splunk_version }}/linux/splunk-{{ splunk_version }}-{{ splunk_build }}-Linux-x86_64.tgz"
    dest: "/tmp/splunk-{{ splunk_version }}.tgz"
    mode: '0644'
  when: not splunk_installed.stat.exists

- name: Extract Splunk Enterprise
  unarchive:
    src: "/tmp/splunk-{{ splunk_version }}.tgz"
    dest: "/opt"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    remote_src: yes
  when: not splunk_installed.stat.exists
  notify: restart splunk

- name: Set Splunk ownership
  file:
    path: "{{ splunk_home }}"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    recurse: yes
  when: not splunk_installed.stat.exists

- name: Accept Splunk license and set admin password
  command: >
    {{ splunk_home }}/bin/splunk start --accept-license --answer-yes --no-prompt
    --seed-passwd {{ splunk_admin_password }}
  become_user: "{{ splunk_user }}"
  when: not splunk_installed.stat.exists
  notify: restart splunk

- name: Stop Splunk before configuration
  command: "{{ splunk_home }}/bin/splunk stop"
  become_user: "{{ splunk_user }}"
  ignore_errors: yes

- name: Generate server.conf
  template:
    src: server.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/server.conf"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    mode: '0644'
    backup: yes
  notify: restart splunk

- name: Generate serverclass.conf for deployment server
  template:
    src: serverclass.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/serverclass.conf"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    mode: '0644'
    backup: yes
  notify: restart splunk

- name: Configure web.conf for SSL
  copy:
    content: |
      [settings]
      httpport = {{ splunk_web_port }}
      mgmtHostPort = 0.0.0.0:{{ splunk_mgmt_port }}
      enableSplunkWebSSL = {{ splunk_ssl_enabled | lower }}
      {% if splunk_ssl_enabled %}
      privKeyPath = {{ splunk_ssl_key_path }}
      serverCert = {{ splunk_ssl_cert_path }}
      {% endif %}
    dest: "{{ splunk_home }}/etc/system/local/web.conf"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    mode: '0644'
  notify: restart splunk

- name: Create systemd service file
  template:
    src: splunk.service.j2
    dest: /etc/systemd/system/splunk.service
    mode: '0644'
  notify:
    - reload systemd
    - restart splunk

- name: Enable and start Splunk service
  systemd:
    name: splunk
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for Splunk to be ready
  uri:
    url: "https://localhost:{{ splunk_mgmt_port }}/services/server/info"
    user: admin
    password: "{{ splunk_admin_password }}"
    method: GET
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 10
  delay: 30

- name: Configure deployment server apps directory
  file:
    path: "{{ splunk_home }}/etc/deployment-apps/{{ item.name }}"
    state: directory
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    mode: '0755'
  loop: "{{ deployment_server_apps }}"

- name: Log deployment completion
  lineinfile:
    path: "{{ deployment_log_file }}"
    line: "{{ ansible_date_time.iso8601 }} - Splunk Enterprise deployment server configured successfully on {{ inventory_hostname }}"
    create: yes
    mode: '0644'
