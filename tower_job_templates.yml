---
# Ansible Tower Job Templates Configuration

job_templates:
  - name: "Deploy Splunk Deployment Server"
    description: "Complete deployment of Splunk Enterprise as deployment server"
    job_type: "run"
    inventory: "Production Servers"
    project: "Splunk Automation"
    playbook: "site.yml"
    credential: "Production SSH Key"
    vault_credential: "Ansible Vault"
    verbosity: 1
    become_enabled: true
    allow_simultaneous: false
    ask_variables_on_launch: true
    extra_vars: |
      ---
      deployment_type: full
      restore_from_backup: true
    survey_enabled: true
    survey_spec:
      name: "Deployment Configuration"
      description: "Configure deployment parameters"
      spec:
        - variable: "splunk_admin_password"
          question_name: "Splunk Admin Password"
          type: "password"
          required: true
        - variable: "environment"
          question_name: "Target Environment"
          type: "multiplechoice"
          choices:
            - "production"
            - "staging"
            - "development"
          required: true
        - variable: "restore_from_backup"
          question_name: "Restore from Backup?"
          type: "boolean"
          default: true
        - variable: "github_sync_enabled"
          question_name: "Enable GitHub Integration?"
          type: "boolean"
          default: true

  - name: "Restore Splunk from Backup"
    description: "Restore Splunk configuration from backup source"
    job_type: "run"
    inventory: "Production Servers"
    project: "Splunk Automation"
    playbook: "playbooks/restore_backup.yml"
    credential: "Production SSH Key"
    vault_credential: "Ansible Vault"
    verbosity: 1
    become_enabled: true
    survey_enabled: true
    survey_spec:
      name: "Backup Restoration"
      description: "Configure backup restoration parameters"
      spec:
        - variable: "backup_source_url"
          question_name: "Backup Source URL"
          type: "text"
          required: true
        - variable: "backup_validation"
          question_name: "Validate Backup Before Restoration"
          type: "boolean"
          default: true

  - name: "Update from GitHub"
    description: "Update Splunk configuration from GitHub repository"
    job_type: "run"
    inventory: "Production Servers"
    project: "Splunk Automation"
    playbook: "playbooks/update_from_github.yml"
    credential: "Production SSH Key"
    vault_credential: "Ansible Vault"
    verbosity: 1
    become_enabled: true
    survey_enabled: true
    survey_spec:
      name: "GitHub Update"
      description: "Configure GitHub synchronization"
      spec:
        - variable: "github_branch"
          question_name: "GitHub Branch"
          type: "text"
          default: "main"
          required: true
        - variable: "force_update"
          question_name: "Force Update (Overwrite Local Changes)"
          type: "boolean"
          default: false

  - name: "Validate Splunk Deployment"
    description: "Validate Splunk deployment server configuration"
    job_type: "run"
    inventory: "Production Servers"
    project: "Splunk Automation"
    playbook: "playbooks/validate_deployment.yml"
    credential: "Production SSH Key"
    vault_credential: "Ansible Vault"
    verbosity: 2
    become_enabled: true

workflow_templates:
  - name: "Complete Splunk Deployment Workflow"
    description: "End-to-end Splunk deployment with validation"
    organization: "Infrastructure"
    workflow_nodes:
      - job_template: "Deploy Splunk Deployment Server"
        success_nodes:
          - job_template: "Validate Splunk Deployment"
        failure_nodes:
          - job_template: "Rollback Deployment"
      - job_template: "Validate Splunk Deployment"
        success_nodes:
          - notification_template: "Deployment Success Notification"
        failure_nodes:
          - notification_template: "Deployment Failure Notification"

  - name: "Configuration Update Workflow"
    description: "Update configuration from GitHub with validation"
    organization: "Infrastructure"
    workflow_nodes:
      - job_template: "Update from GitHub"
        success_nodes:
          - job_template: "Validate Splunk Deployment"
        failure_nodes:
          - job_template: "Rollback Configuration"
      - job_template: "Validate Splunk Deployment"
        success_nodes:
          - notification_template: "Update Success Notification"
        failure_nodes:
          - notification_template: "Update Failure Notification"

notifications:
  - name: "Deployment Success Notification"
    notification_type: "email"
    configuration:
      host: "smtp.company.com"
      port: 587
      use_tls: true
      username: "ansible-notifications@company.com"
      recipients:
        - "splunk-admins@company.com"
        - "infrastructure-team@company.com"
      subject: "Splunk Deployment Successful - {{ tower_job_template_name }}"
      body: |
        Splunk deployment has completed successfully.
        
        Job Details:
        - Template: {{ tower_job_template_name }}
        - Job ID: {{ tower_job_id }}
        - Started: {{ tower_job_launch_type }}
        - Inventory: {{ tower_inventory_name }}
        
        Please verify the deployment at: https://{{ ansible_default_ipv4.address }}:8000

  - name: "Deployment Failure Notification"
    notification_type: "email"
    configuration:
      host: "smtp.company.com"
      port: 587
      use_tls: true
      username: "ansible-notifications@company.com"
      recipients:
        - "splunk-admins@company.com"
        - "infrastructure-team@company.com"
      subject: "Splunk Deployment FAILED - {{ tower_job_template_name }}"
      body: |
        Splunk deployment has FAILED.
        
        Job Details:
        - Template: {{ tower_job_template_name }}
        - Job ID: {{ tower_job_id }}
        - Started: {{ tower_job_launch_type }}
        - Inventory: {{ tower_inventory_name }}
        
        Please check the job logs for details and take appropriate action.

projects:
  - name: "Splunk Automation"
    description: "Splunk Enterprise automation playbooks"
    organization: "Infrastructure"
    scm_type: "git"
    scm_url: "https://github.com/company/splunk-ansible-automation.git"
    scm_branch: "main"
    scm_credential: "GitHub Access Token"
    scm_update_on_launch: true
    scm_update_cache_timeout: 0

inventories:
  - name: "Production Servers"
    description: "Production Splunk servers"
    organization: "Infrastructure"
    variables:
      environment: "production"
      splunk_environment: "prod"

  - name: "Staging Servers"
    description: "Staging Splunk servers"
    organization: "Infrastructure"
    variables:
      environment: "staging"
      splunk_environment: "staging"

credentials:
  - name: "Production SSH Key"
    description: "SSH key for production servers"
    credential_type: "Machine"
    organization: "Infrastructure"
    inputs:
      username: "ansible"
      ssh_key_data: "{{ vault_production_ssh_key }}"
      become_method: "sudo"
      become_username: "root"

  - name: "Ansible Vault"
    description: "Ansible vault password"
    credential_type: "Vault"
    organization: "Infrastructure"
    inputs:
      vault_password: "{{ vault_ansible_vault_password }}"

  - name: "GitHub Access Token"
    description: "GitHub personal access token"
    credential_type: "Source Control"
    organization: "Infrastructure"
    inputs:
      username: "ansible-automation"
      password: "{{ vault_github_token }}"
